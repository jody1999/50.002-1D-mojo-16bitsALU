module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
   
    output io_led[3][8],
    input io_dip[3][8],
    output led[8],
    
    input io_button[5]   
    ) {
  
  sig rst;  // reset signal
  
  
 .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;  
    
    .rst(rst){
      dff rmba[16];
      dff rmbb[16];
      dff operation[6];
      fsm state(#INIT(A), .clk(clk), .rst(rst)) = {A, B, OUTCOME}; 
  }
 }
  
  //sig 
  combinedALU alu;
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led[7:0] = 8h00;
    io_led[0] = 8h00;
    io_led[1] = 8h00; 
    io_led[2] = 8h00;   
    
    alu.a [15:0] = rmba.q;
    alu.b [15:0] = rmbb.q;
    
    alu.alufn = operation.q;
      
            
    case(state.q){
      state.A:
      
         //operation 
        operation.d=io_dip[2][5:0];
      
        led[7] = 1;
        led[6:0] = 7b0000000;
        
        rmba.d[15:8] = io_dip[1][7:0];
        rmba.d[7:0] = io_dip[0][7:0];
               
        io_led[1][7:0] = io_dip[1][7:0]; 
        io_led[0][7:0] = io_dip[0][7:0];
        io_led[2][7:0] = io_dip[2][7:0];
        
      if(io_button[3]){
        state.d = state.B;
      }
      
        
      state.B:
      
        operation.d=io_dip[2][5:0];
        
        led[7:6] = 2b11;
        led[5:0] = 6b000000;
        
        rmbb.d[15:8] = io_dip[1][7:0];
        rmbb.d[7:0] = io_dip[0][7:0];
          
        io_led[1][7:0] = io_dip[1][7:0]; 
        io_led[0][7:0] = io_dip[0][7:0];
        
       if(io_button[4]){
         state.d = state.OUTCOME;
       }
        
      state.OUTCOME:
      
        operation.d=io_dip[2][5:0];
        
        led[7:5] = 3b111;
        led[4:0] = 5b00000;
        
        io_led[1][7:0] = alu.out[15:8]; 
        io_led[0][7:0] = alu.out[7:0];
        
        if(io_button[0]){
          state.d = state.A;
          
          led[7:0] = 8h00;
          io_led[0] = 8h00;
          io_led[1] = 8h00; 
          io_led[2] = 8h00;   
          
          alu.a [15:0] = rmba.q;
          alu.b [15:0] = rmbb.q;
          
          alu.alufn = operation.q;
      }        
    }    
  }  
}